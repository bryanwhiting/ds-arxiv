library(XML)
readHTMLTable("http://www.mormoninformation.com/stats.htm")
dat <- readHTMLTable("http://www.mormoninformation.com/stats.htm")
dim(dat)
length9dat
class(dat)
dat[[1]]
SimplifyText <- function(x) {
return(removePunctuation(removeNumbers(stripWhitespace(tolower(x)))))
}
SimplifyText(dat)
library(tm)
SimplifyText(dat)
SimplifyText(dat)
dat <- SimplifyText(dat[[1]])
dat
nformation.com/stats.htm")
1
growth <- dat[[1]]
dat <- readHTMLTable("http://www.mormoninformation.com/stats.htm")
library(tm)
SimplifyText <- function(x) {
return(removePunctuation(removeNumbers(stripWhitespace(tolower(x)))))
}
growth <- dat[[1]]
growth
cleantxt(growth)
cleantxt <- function(txt){
txt <- gsub(pattern = "x",replace="",x = txt)
txt <- gsub(pattern = ",",replace="",x = txt)
txt <- gsub(pattern = "\\$",replace="",x = txt)
dat <- read.table(textConnection(object = txt))
colnames(dat) <- c("shape","carat","cut","color","clarity","table","depth","cert",  "x","y","z","price")
dat$ratio <- round(dat$x/dat$y,3)
dat
}
)
cleantxt(growth)
cleantxt <- function(txt){
txt <- gsub(pattern = "x",replace="",x = txt)
txt <- gsub(pattern = ",",replace="",x = txt)
txt <- gsub(pattern = "\\$",replace="",x = txt)
}
cleantxt(growth$Convertbaptisms)
cleantxt <- function(txt){
txt <- gsub(pattern = "x",replace="",x = txt)
txt <- gsub(pattern = ",",replace="",x = txt)
txt <- gsub(pattern = "\\$",replace="",x = txt)
txt
}
cleantxt(growth$Convertbaptisms)
growth$convts <- as.numeric(as.vector(cleantxt(growth$Convertbaptisms)))
growth$convts
dat1 <- readHTMLTable("http://www.mormoninformation.com/stats.htm")
library(tm)
SimplifyText <- function(x) {
return(removePunctuation(removeNumbers(stripWhitespace(tolower(x)))))
}
cleantxt <- function(txt){
txt <- gsub(pattern = "x",replace="",x = txt)
txt <- gsub(pattern = ",",replace="",x = txt)
txt <- gsub(pattern = "\\$",replace="",x = txt)
txt
}
# Data cleansing
dat <- dat1[[1]]
dat$convts <- as.numeric(as.vector(cleantxt(dat$Convertbaptisms)))
plot(dat$Year,)
plot(dat$Year,dat$convts)
dat
cbind(dat$convts,dat$Convertbaptisms)
data.frame(dat$convts,dat$Convertbaptisms)
dat$Year
dat1 <- readHTMLTable("http://www.ldsstatistics.com")
dat1
dat1
dat
dat$membs <- as.numeric(as.vector(cleantxt(dat$Membership)))
str(dat)
plot(dat$Year, dat$membs)
options(scipen = 9)
plot(dat$Year, dat$membs)
c(rep(c("none","light grey"), 2))
c(rep(c("none","grey"), 5))
c(rep("none", 2),
rep("#F5FBFF", 4))
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Due Dilligence BW')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
load("~/Dropbox/stat-consulting/jorge-pica/Manager Diligence/MD v2.RData")
install.packages(acs)
install.packages("acs")
load("~/Dropbox/stat-consulting/jorge-pica/Manager Diligence/MD v2.RData")
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
shiny::runApp('Dropbox/stat-consulting/jorge-pica/Manager Diligence')
install.packages('rvest')
library(rvest)
url <- html("https://www.lds.org/general-conference/2016/10/serve?lang=eng")
url <- read_html("https://www.lds.org/general-conference/2016/10/serve?lang=eng")
url <- read_html("http://www.lds.org/general-conference/2016/10/serve?lang=eng")
read_html("https://www.lds.org/general-conference/2016/10/serve?lang=eng")
html_form(read_html("https://hadley.wufoo.com/forms/libraryrequire-quiz/"))
library(RCURL)
library(XML)
library(RCurl)
getURL(url)
url <- "https://www.lds.org/general-conference/2016/10/serve?lang=eng"
getURL(url)
html_form(getURL(url))
doc <- htmlarse(getURL(url), asText = True)
doc <- htmlParse(getURL(url), asText = True)
doc <- htmlParse(getURL(url), asText = TRUE)
doc
head(doc)
length(doc)
url <- "https://www.lds.org/general-conference/2016/10/serve?lang=eng"
doc <- htmlParse(getURL(url), asText = TRUE)
doc
read_html(doc)
read_xml(doc)
read_html(getURL(url))
doc <- read_html(getURL(url))
head(doc)
doc$doc
doc %>% html_tag()
doc %>% html_name()
doc$doc %>% html_name()
url <- "https://www.lds.org/general-conference/2016/10/serve?lang=eng"
#doc <- htmlParse(getURL(url), asText = TRUE)
raw <- read_html(getURL(url))
head(raw)
raw
doc$ %>% html_nodes(xpath = '//*[@id="a"]')
doc$ %>% html_nodes(xpath = '//*[@id="article_content"]')
raw %>% html_nodes(xpath = '//*[@id="article_content"]')
raw %>% html_nodes(xpath = '//*[@class="article_content"]')
fnames <- html_nodes("article_content")
raw %>% html_nodes("article_content")
raw %>% html_nodes("center")
raw %>% html_nodes("center") %>% html_nodes("font")
raw %>% html_nodes("tbody tr")
raw
raw %>% html_nodes("body")
raw %>% html_nodes("body") %>% html_nodes("p")
ps <- raw %>% html_nodes("body") %>% html_nodes("p")
ps <- raw %>% html_nodes("body") %>% html_nodes("p")
length(ps)
ps
ps[1]
ps[1] %>% html_text()
ps %>% html_text()
ps <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
ps
conf <- "https://www.lds.org/general-conference/2016/10?lang=eng"
raw <- read_html(getURL(url))
ps <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
ps
raw <- read_html(getURL(url))
conf <- "https://www.lds.org/general-conference/2016/10?lang=eng"
raw <- read_html(getURL(url))
ps <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
ps
raw
conf <- "https://www.lds.org/general-conference/2016/10?lang=eng"
raw <- read_html(getURL(conf))
ps <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
ps
ps <- raw %>% html_nodes("body") %>% html_nodes("lumen-tile_title") %>% html_text()
ps
ps <- raw %>% html_nodes("body") %>% html_nodes("lumen-tile_title")
ps
raw %>% html_nodes("body")
ps <- raw %>% html_nodes("body") %>% html_nodes("div")
raw %>% html_nodes("body") %>% html_nodes("div")
raw %>% html_nodes("body") %>% html_nodes("div") %>% html_text()
raw %>% html_nodes("body") %>% html_nodes("div")
div <- raw %>% html_nodes("body") %>% html_nodes("div")
div %>% html_nodes("lumen-tile_title")
library(rvest)
library(XML)
library(RCurl)
url <- "https://www.lds.org/general-conference/2016/10/serve?lang=eng"
raw <- read_html(getURL(url))
ps <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
ps
conf <- "https://www.lds.org/general-conference/2016/10?lang=eng"
raw <- read_html(getURL(conf))
div <- raw %>% html_nodes("body") %>% html_nodes("div")
div
div <- raw %>% html_nodes("body") %>% html_nodes("div")
div <- raw %>% html_nodes("body") %>% html_nodes("div")
div %>% html_nodes(".lumen-tile_title")
div %>% html_nodes(css = ".lumen-tile_title")
div %>% html_nodes(css = "div #lumen-tile_title")
div <- raw %>% html_nodes("body") %>% html_nodes("div lumen-content")
div
div <- raw %>% html_nodes("body") %>% html_nodes("div")
div
div %>% html_nodes(css = "lumen-tile_title")
div %>% html_nodes(css = "pf-popup__col")
div %>% html_nodes(css = ".pf-popup__col")
div %>% html_nodes(css = ".lumen-content")
raw %>% html_nodes(css = ".lumen-content")
raw %>% html_nodes(css = ".lumen-tile__title")
raw %>% html_nodes(css = ".lumen-tile__title") %>% html_text()
raw %>% html_nodes(css = ".lumen-tile__link") %>% html_text()
raw %>% html_nodes(css = ".lumen-tile__link")
#
library(rvest)
library(XML)
library(RCurl)
url <- "https://www.lds.org/general-conference/2016/10/serve?lang=eng"
raw <- read_html(getURL(url))
ps <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
ps
# <a> use "a". <a class="hello"> use ".hello". <a id="fancy"> use #fancy.
conf <- "https://www.lds.org/general-conference/2016/10?lang=eng"
raw <- read_html(getURL(conf))
# Get all the titles:
raw %>% html_nodes(css = ".lumen-tile__title") %>% html_text()
# But we can get the hrefs instead. Here they are:
raw %>% html_nodes(css = ".lumen-tile__link")
ps
raw %>% html_nodes(css = ".lumen-tile__link") %>% html_attr("href")
urls = raw %>% html_nodes(css = ".lumen-tile__link") %>% html_attr("href")
year = "2016"
mon = "10"
conf <- paste("https://www.lds.org/general-conference/", year,"/",mon,"?lang=eng",sep = "")
conf
get_talk_urls = function(year,mon){
conf <- paste("https://www.lds.org/general-conference/", year,"/",mon,"?lang=eng",sep = "")
raw <- read_html(getURL(conf))
urls = raw %>% html_nodes(css = ".lumen-tile__link") %>% html_attr("href")
urls
}
get_talk_urls = function(year,month){
yr = as.character(year)
mon = as.character(month)
conf <- paste("https://www.lds.org/general-conference/", yr,"/",mon,"?lang=eng",sep = "")
raw <- read_html(getURL(conf))
urls = raw %>% html_nodes(css = ".lumen-tile__link") %>% html_attr("href")
urls
}
get_talk_urls(2016,10)
get_talk_content = function(url){
ps <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
ps
}
get_talk_content(vs_urls[1])
get_talk_content = function(url){
conf <- paste("https://www.lds.org",url,sep = "")
raw <- read_html(getURL(conf))
ps <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
ps
}
vs_urls = get_talk_urls(2016,10)
get_talk_content(vs_urls[1])
get_talk_content(vs_urls[2])
get_talk_content(vs_urls[1])
get_talk_content(vs_urls[2])
a = get_talk_content(vs_urls[2])
paste(a, collapse = "")
get_talk_content = function(url){
conf <- paste("https://www.lds.org",url,sep = "")
raw <- read_html(getURL(conf))
pars <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
bulk = paste(pars,collapse = "")
bulk
}
vs_urls = get_talk_urls(2016,10)
get_talk_content(vs_urls[1])
a = get_talk_content(vs_urls[2])
a
strip(a)
get_talk_content = function(url){
conf <- paste("https://www.lds.org",url,sep = "")
raw <- read_html(getURL(conf))
pars <- raw %>% html_nodes("body") %>% html_nodes("p") %>% html_text()
bulk = paste(pars,collapse = " ")
bulk
}
get_talk_content(vs_urls[1])
install.packages("sparklyr")
install.packages("sparklyR")
install.packages("sparklyr")
a = list(
matrix(rnorm(9),nrow = 3))
matrix(rnorm(9),nrow = 3)),
matrix(rnorm(12),nrow = 3)),
matrix(rnorm(15),nrow = 3))
a = list(
matrix(rnorm(9),nrow = 3),
matrix(rnorm(12),nrow = 3),
matrix(rnorm(15),nrow = 3)
)
a
lapply(a,"[")
lapply(a,"[",2)
lapply(a,"[",2,1)
a = list(
matrix(1:9,nrow = 3),
matrix((1:12),nrow = 3),
matrix((1:15),nrow = 3)
)
lapply(a,"[",2,1)
lapply(a,"[",2,3)
lapply(a,"[",2,)
lapply(a,"[",2)
lapply(a,"[",2,)
a[[1]]
lapply(a,"[",1,)
lapply(a,"[",,1)
a
lapply(a,"[",1,)
df = mtcars
lapply(mtcars,summary(x))
lapply(mtcars,function(x)summary(x))
lapply(mtcars,function(x) list(summary(x),
unique(x))
lapply(mtcars,function(x) list(summary(x),
unique(x)))
lapply(mtcars,function(x) list(
summary(x),
unique(x))
)
lapply(mtcars,function(x) list(
sum = summary(x),
uniq = unique(x),
mis = length(is.na(x))
)
)
lapply(mtcars,function(x) list(
sum = summary(x),
uniq = unique(x),
missing = sum(is.na(x))
)
)
sapply(mtcars,function(x) list(
sum = summary(x),
uniq = unique(x),
missing = sum(is.na(x))
)
)
sapply(mtcars,function(x) list(
sum = summary(x),
nuniq = length(unique(x)),
missing = sum(is.na(x))
)
)
sapply(mtcars,function(x) list(
nuniq = length(unique(x)),
missing = sum(is.na(x))
)
)
sapply(mtcars,summary)
summary(mtcars)
sapply(mtcars,function(x) list(
nuniq = length(unique(x)),
missing = sum(is.na(x))
)
)
lm(price ~ as.factor(cyl))
library(ggplot2)
library(tidyr)
lm(price ~ as.factor(cyl))
lm(price ~ as.factor(cyl),data = diamonds)
names(diamonds)
lm(price ~ as.factor(color),data = diamonds)
reg = function(x) lm(price ~ x, data = diamonds)
lapply(diamonds,reg)
sapply(diamonds,reg)
reg = function(x) summary(lm(price ~ x, data = diamonds))
lapply(diamonds,reg)
sapply(diamonds,reg)
a = lapply(diamonds,reg)
a[[1]]
coef(a[[1]])
reg = function(x) coef(lm(price ~ x, data = diamonds))
a = lapply(diamonds,reg)
a
reg = function(x) coef(summary(lm(price ~ x, data = diamonds)))
a = lapply(diamonds,reg)
a
sapply(diamonds,reg)
sapply(diamonds,reg,simplify = F)
sapply(diamonds,reg,simplify = "array")
sapply(diamonds,reg)
sapply(diamonds,reg)
lapply(diamonds,reg)
lm(price ~ carat, data = diamonds)
lm(price ~ z, data = diamonds)
l = sapply(diamonds,'[',2)
l
diamonds[2,]
rep(diamonds[2,],c(1,2))
rep(10,c(1,2,3))
rep(c(1,2,3),c(1,2,3))
rep(c(10,2,3),c(1,2,3))
lapply(diamonds,function(x) summary(x))
sapply(diamonds,function(x) summary(x))
sapply(diamonds,summary)
sapply(diamonds,summary,simplify = T)
sapply(diamonds,reg)
sapply(diamonds,summary,simplify = T)
summary(diamonds)
lapply(diamonds, names)
lapply(diamonds, colnames)
lapply(diamonds, lm)
lapply(diamonds, function(x) lm(price ~ x, data = diamonds))
lapply(diamonds, function(x) lm(diamonds$price ~ x))
sapply(diamonds, function(x) lm(diamonds$price ~ x))
sapply(diamonds, function(x) summary(lm(diamonds$price ~ x)))
lapply(diamonds, function(x) summary(lm(diamonds$price ~ x)))
lm(diamonds$price ~ diamonds$z)
single = lapply(diamonds, function(x) summary(lm(diamonds$price ~ x)))
single = lapply(diamonds, function(x) summary(lm(diamonds$price ~ x)))
single
lapply(single,resid)
resids = lapply(single,resid)
single_lm  = lapply(diamonds, function(x) summary(lm(diamonds$price ~ x)))
resids = lapply(single_lm,resid)
resids = lapply(single_lm,resid)
train_fit = lapply(single_lm,predict)
predict(diamonds$price ~ diamonds$x)
a = lm(diamonds$price ~ diamonds$x)
a
predict(a)
single_lm  = lapply(diamonds, function(x) summary(lm(diamonds$price ~ x)))
resids = lapply(single_lm,resid)
train_fit = lapply(single_lm,predict)
single_lm  = lapply(diamonds, function(x) lm(diamonds$price ~ x))
resids = lapply(single_lm,resid)
train_fit = lapply(single_lm,predict)
train_fit = sapply(single_lm,predict)
train_fit
train_fit = sapply(single_lm,function(x) mean(predict(x)))
train_fit
train_fit = sapply(single_lm,predict)
train_fit
mse = sapply(train_fit, function(x) mean((diamonds$price - x)^2))
train_fit$y = diamonds$price
train_fit = sapply(single_lm,predict)
train_fit
class(train_fit)
train_fit = as.data.frame(sapply(single_lm,predict))
train_fit$y = diamonds$price
diff = sapply(train_fit, function(x) diamonds$price - x)
diff2 = diff^2
mse = apply(diff2,2,mean)
mse
sum(50,299,703,199,185,59,159)
reticulate::repl_python()
reticulate::repl_python()
verses = py$text
text
reticulate::repl_python()
py
use_python('/usr/local/bin/python')
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
use_python('/usr/local/bin/python')
repl_python()
library(reticulate)
use_python('/Users/bryanwhiting/venvs/py37/bin/python3')
repl_python()
setwd("~/github/ds-arxiv/python")
reticulate::repl_python()
reticulate::repl_python()
